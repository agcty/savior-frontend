/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "checkMintAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDonationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405267016345785d8a00006008553480156200001d57600080fd5b506040516200186838038062001868833981016040819052620000409162000240565b828260006200005083826200035c565b5060016200005f82826200035c565b5050506200007c620000766200009060201b60201c565b62000094565b6200008781620000e6565b50505062000428565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620000f062000112565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b03163314620001715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019b57600080fd5b81516001600160401b0380821115620001b857620001b862000173565b604051601f8301601f19908116603f01168101908282118183101715620001e357620001e362000173565b816040528381526020925086838588010111156200020057600080fd5b600091505b8382101562000224578582018301518183018401529082019062000205565b83821115620002365760008385830101525b9695505050505050565b6000806000606084860312156200025657600080fd5b83516001600160401b03808211156200026e57600080fd5b6200027c8783880162000189565b945060208601519150808211156200029357600080fd5b50620002a28682870162000189565b604086015190935090506001600160a01b0381168114620002c257600080fd5b809150509250925092565b600181811c90821680620002e257607f821691505b6020821081036200030357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035757600081815260208120601f850160051c81016020861015620003325750805b601f850160051c820191505b8181101562000353578281556001016200033e565b5050505b505050565b81516001600160401b0381111562000378576200037862000173565b6200039081620003898454620002cd565b8462000309565b602080601f831160018114620003c85760008415620003af5750858301515b600019600386901b1c1916600185901b17855562000353565b600085815260208120601f198616915b82811015620003f957888601518255948401946001909101908401620003d8565b5085821015620004185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61143080620004386000396000f3fe6080604052600436106101295760003560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb46514610334578063b88d4fde14610354578063c87b56dd14610374578063db006a7514610394578063e985e9c5146103b4578063f2fde38b146103ef57600080fd5b806370a08231146102b9578063715018a6146102d9578063755edd17146102ee5780638da5cb5b1461030157806395d89b411461031f57600080fd5b806323b872dd116100f257806323b872dd1461021957806342842e0e146102395780635fe119b5146102595780636352211e146102795780636f48e79b1461029957600080fd5b80629a9b7b1461012e57806301ffc9a71461015757806306fdde0314610187578063081812fc146101a9578063095ea7b3146101f7575b600080fd5b34801561013a57600080fd5b5061014460095481565b6040519081526020015b60405180910390f35b34801561016357600080fd5b50610177610172366004611090565b61040f565b604051901515815260200161014e565b34801561019357600080fd5b5061019c610461565b60405161014e91906110b4565b3480156101b557600080fd5b506101df6101c4366004611109565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b34801561020357600080fd5b50610217610212366004611139565b6104ef565b005b34801561022557600080fd5b50610217610234366004611163565b6105d6565b34801561024557600080fd5b50610217610254366004611163565b61079d565b34801561026557600080fd5b50610177610274366004611109565b610872565b34801561028557600080fd5b506101df610294366004611109565b61093e565b3480156102a557600080fd5b506102176102b436600461119f565b610995565b3480156102c557600080fd5b506101446102d436600461119f565b6109bf565b3480156102e557600080fd5b50610217610a22565b6101446102fc36600461119f565b610a36565b34801561030d57600080fd5b506006546001600160a01b03166101df565b34801561032b57600080fd5b5061019c610a71565b34801561034057600080fd5b5061021761034f3660046111ba565b610a7e565b34801561036057600080fd5b5061021761036f3660046111f6565b610aea565b34801561038057600080fd5b5061019c61038f366004611109565b610baf565b3480156103a057600080fd5b506102176103af366004611109565b610bba565b3480156103c057600080fd5b506101776103cf366004611291565b600560209081526000928352604080842090915290825290205460ff1681565b3480156103fb57600080fd5b5061021761040a36600461119f565b610c14565b60006301ffc9a760e01b6001600160e01b03198316148061044057506380ac58cd60e01b6001600160e01b03198316145b8061045b5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461046e906112c4565b80601f016020809104026020016040519081016040528092919081815260200182805461049a906112c4565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061053857506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61057a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b0384811691161461062c5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610571565b6001600160a01b0382166106765760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610571565b336001600160a01b03841614806106b057506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806106d157506000818152600460205260409020546001600160a01b031633145b61070e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610571565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6107a88383836105d6565b6001600160a01b0382163b15806108515750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610821573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084591906112fe565b6001600160e01b031916145b61086d5760405162461bcd60e51b81526004016105719061131b565b505050565b60075460405163543a185d60e11b815233600482015260009182916001600160a01b039091169063a87430ba906024016040805180830381865afa1580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e29190611345565b509050828110156109355760405162461bcd60e51b815260206004820152601760248201527f446f6e6174696f6e20616d6f756e7420746f6f206c6f770000000000000000006044820152606401610571565b50600192915050565b6000818152600260205260409020546001600160a01b0316806109905760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610571565b919050565b61099d610c8d565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610a065760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610571565b506001600160a01b031660009081526003602052604090205490565b610a2a610c8d565b610a346000610ce7565b565b6000610a43600854610872565b50610a4f600854610bba565b6000600960008154610a6090611369565b9182905550905061045b8382610d39565b6001805461046e906112c4565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610af58585856105d6565b6001600160a01b0384163b1580610b8c5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610b3d9033908a90899089908990600401611390565b6020604051808303816000875af1158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8091906112fe565b6001600160e01b031916145b610ba85760405162461bcd60e51b81526004016105719061131b565b5050505050565b606061045b82610e09565b60075460405163db006a7560e01b8152600481018390526001600160a01b039091169063db006a7590602401600060405180830381600087803b158015610c0057600080fd5b505af1158015610ba8573d6000803e3d6000fd5b610c1c610c8d565b6001600160a01b038116610c815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610571565b610c8a81610ce7565b50565b6006546001600160a01b03163314610a345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610571565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d438282610f6f565b6001600160a01b0382163b1580610de95750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd91906112fe565b6001600160e01b031916145b610e055760405162461bcd60e51b81526004016105719061131b565b5050565b606060018272184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110610e4c576040919091019072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b90045b6d04ee2d6d415b85acef81000000008110610e7a57602091909101906d04ee2d6d415b85acef810000000090045b662386f26fc100008110610e9a5760109190910190662386f26fc1000090045b6305f5e1008110610eb457600891909101906305f5e10090045b6127108110610eca576004919091019061271090045b60648110610ede5760029190910190606490045b600a8110610eed576001820191505b60008267ffffffffffffffff811115610f0857610f086113e4565b6040519080825280601f01601f191660200182016040528015610f32576020820181803683370190505b5090508281016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a87061a8153600a8604955085610f3c5750949350505050565b6001600160a01b038216610fb95760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610571565b6000818152600260205260409020546001600160a01b03161561100f5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610571565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c8a57600080fd5b6000602082840312156110a257600080fd5b81356110ad8161107a565b9392505050565b600060208083528351808285015260005b818110156110e1578581018301518582016040015282016110c5565b818111156110f3576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561111b57600080fd5b5035919050565b80356001600160a01b038116811461099057600080fd5b6000806040838503121561114c57600080fd5b61115583611122565b946020939093013593505050565b60008060006060848603121561117857600080fd5b61118184611122565b925061118f60208501611122565b9150604084013590509250925092565b6000602082840312156111b157600080fd5b6110ad82611122565b600080604083850312156111cd57600080fd5b6111d683611122565b9150602083013580151581146111eb57600080fd5b809150509250929050565b60008060008060006080868803121561120e57600080fd5b61121786611122565b945061122560208701611122565b935060408601359250606086013567ffffffffffffffff8082111561124957600080fd5b818801915088601f83011261125d57600080fd5b81358181111561126c57600080fd5b89602082850101111561127e57600080fd5b9699959850939650602001949392505050565b600080604083850312156112a457600080fd5b6112ad83611122565b91506112bb60208401611122565b90509250929050565b600181811c908216806112d857607f821691505b6020821081036112f857634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561131057600080fd5b81516110ad8161107a565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000806040838503121561135857600080fd5b505080516020909101519092909150565b60006001820161138957634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e2c393ef2ed774bb6ebb93625593613862b7f96e811bae133baef7ae8d80433464736f6c634300080f0033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(
      _name,
      _symbol,
      _address,
      overrides || {}
    ) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _address,
      overrides || {}
    );
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
